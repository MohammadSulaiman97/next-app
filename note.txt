install project: npx create-next-app@13.4
enter name of project and then click enter

Local:
- npm run dev
Prod:
- npm run build 
- npm start


# It has some points
1- When creating page.tsx in folder that mean create a new router
2- Folder [id] this is dynimac
3- Folder [[slug]] this is optional and dynimac for example: /category/product/name
4- loading.tsx / not-found.tsx / error.tsx "Pages to process"



https://tailwindcss.com

https://daisyui.com/docs/install/
https://sentry.io/welcome/
https://zod.dev/   validation
- npm i zod

https://www.prisma.io/?via=start&gad_source=1  connection to DB
- npm i prisma
- npx prisma init
- go to env and change the connection with DB
- go to prisma folder then schema file and then 
  change datasource db -> provider to mysql

- npx prisma format  // format the code
- npx prisma migrate dev

https://www.prisma.io/docs/orm/more/help-and-troubleshooting/help-articles/nextjs-prisma-client-dev-practices



// cloud for upload file
https://console.cloudinary.com/pm/c-b5fcc1716a814759aa7847fccdf4fe/getting-started

- npm i next-cloudinary

https://next.cloudinary.dev/installation
copy configuration then go back to console.cloudinary and copy cloud_name from nodejs

CldUploadWidget: go to console.cloudinary tap on settings icon
then go to upload page and then tap on add upload preset
copy preset-name and change Signing-Mode

// demo 
https://demo.cloudinary.com/uw/#/

====================================================
auth:

https://next-auth.js.org/getting-started/example

- npm i next-auth
for the path:
https://next-auth.js.org/configuration/initialization#route-handlers-app
- ... to catch all -> name of parameter : nextauth
/app/api/auth/[...nextauth]/route.ts

AUTH_SECRET to generate go to cmd : openssl rand -base64 32

////////////////
add these to .env
GOOGLE_CLIENT_ID
GOOGLE_CLIENT_SECRET
https://next-auth.js.org/providers/google
select Configuration then create on cloud app and take the information

route to signin page as generated by next 
<Link href='/api/auth/signin'>Login via google</Link>
///////////////////////////////

store user in database:
https://authjs.dev/getting-started/adapters/prisma?_gl=1*137qgpf*_gcl_au*Mjc0MzQyMTI5LjE3MjI3NzY1MTI.
npm i @next-auth/prisma-adapter


// user login page
https://next-auth.js.org/providers/credentials

// to compear password
- npm i bcrypt
- npm i -D @types/bcrypt

// email
https://react.email/
* template
- npm i react-email @react-email/components
* send email
https://resend.com/emails
- npm i resend

